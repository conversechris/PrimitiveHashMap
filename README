Author: Christopher Converse
        cconversee@gmail.com
        30 September 2017


DESCRIPTION
------------------------------------------------------------------------------
    This program is a fixed size hash map that only uses primitive types and 
associates string keys with arbitrary data object references. Collision 
resolution is resolved by linear probing. Methods provided include insertion, 
lookup, and deletion, as well as a hashing function (not written by me, 
source within the .hpp file), and a function to provide the load factor
of the hash map. To see further descriptions of methods provided, see the 
.hpp file.

    PrimitiveMap.hpp: Holds method declarations as well as definitions.

    ** NOTE **
    Because delete is a keyword in C++, it has been renamed from delete to 
    deleteKey.

    test.cpp: Test file that creates a PrimitiveMap<T> object, where T is an
arbitrary data object. Several things are tested: insertion, lookup, and
deletion of the hash map, as well as other cases such as reinsertion of the
same key but different value, insertion with a full table, and lookup/delete of 
a key that does not exist in the table. To test, the arbitrary data object used
was integers.

COMPILING
------------------------------------------------------------------------------
    An executable called test should already be present. If compilation is 
needed for any reason, a Makefile is provided and can be compiled by running
make.

RUNNING
------------------------------------------------------------------------------
    To run the tester file, type ./test in the command line.
